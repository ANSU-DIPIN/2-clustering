#####kmeans clustering########
# crime data
mydata <- input[,c(2:12)] 
View(mydata)
normalized_data <- scale(mydata[,1:11])
View(normalized_data)
fit <- kmeans(normalized_data, 5) # 5 cluster solution
str(fit)
final2<- data.frame(input, fit$cluster) # append cluster membership
View(final2)
final3 <- final2[,c(ncol(final2),1:(ncol(final2)-1))]
View(final3)
aggregate(mydata[,1:11], by=list(fit$cluster), FUN=mean)

#elbow curve & k ~ sqrt(n/2) to decide the k value

wss = (nrow(normalized_data)-1)*sum (apply(normalized_data, 2, var))
# Determine number of clusters by scree-plot 
for (i in 1:10) wss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")   # Look for an "elbow" in the scree plot #
title(sub = "K-Means Clustering Scree-Plot")

# k clustering alternative for large dataset - Clustering Large Applications (Clara)

library(cluster)
xds <- rbind(cbind(rnorm(5000, 0, 8), rnorm(5000, 0, 8)), cbind(rnorm(5000, 50, 8), rnorm(5000, 50, 8)))
xds
xcl <- clara(xds, 2, sample = 100)
clusplot(xcl)

#Partitioning around medoids
xpm <- pam(xds, 2)
clusplot(xpm)
#################################################################################
